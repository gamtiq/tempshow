{"version":3,"file":"tempshow.js","sources":["../src/TempShow.js"],"sourcesContent":["/**\n * Component to temporary show some elements.\n */\n\nimport PropTypes from 'prop-types';\nimport React, {PureComponent} from 'react';\n\n/**\n * Class of component to temporary show some elements.\n *\n * @extends {PureComponent}\n */\nexport default class TempShow extends PureComponent {\n    /**\n     * Component constructor.\n     *\n     * @param {object} props\n     *      Initial props values.\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            visible: props.visible\n        };\n\n        this.handleBlur = this.handleBlur.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.hide = this.hide.bind(this);\n    }\n\n    /**\n     * Component's lifecycle method that is invoked immediately after updating occurs.\n     *\n     * @param {object} prevProps\n     *      Previous props values.\n     * @param {object} prevState\n     *      Previous state.\n     */\n    componentDidUpdate(prevProps, prevState) {\n        const { props, state } = this;\n        if (state.visible === prevState.visible) {\n            const { visible } = props;\n            if (visible !== state.visible) {\n                if (visible) {\n                    this.show();\n                }\n                else {\n                    this.hide();\n                }\n            }\n            else if (visible && (props.postponeAutoHide || props.autoHide !== prevProps.autoHide)) {\n                this.show(props.autoHide);\n            }\n        }\n    }\n\n    /**\n     * Component's lifecycle method that is invoked immediately before a component is unmounted and destroyed.\n     */\n    componentWillUnmount() {\n        this.hide();\n    }\n\n    /**\n     * Cancel component's early scheduled hiding.\n     *\n     * @return {TempShow}\n     *      Reference to component's object (`this`).\n     */\n    cancelHide() {\n        const timeoutId = this.hideTimeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n            this.hideTimeoutId = null;\n        }\n\n        return this;\n    }\n\n    /**\n     * Hide component.\n     *\n     * @see #cancelHide\n     * @see #show\n     */\n    hide() {\n        if (this.state.visible) {\n            const { onHide } = this.props;\n            this.cancelHide()\n                .setState({visible: false});\n            if (onHide) {\n                onHide(false, this);\n            }\n        }\n    }\n\n    /**\n     * Show component.\n     *\n     * @param {number} [autoHideTime=this.props.autoHide]\n     *      Number of seconds after which component should be hidden automatically.\n     * @see #cancelHide\n     * @see #hide\n     */\n    show(autoHideTime) {\n        const { props } = this;\n        const autoHide = typeof autoHideTime === 'number'\n            ? autoHideTime\n            : props.autoHide;\n        this.cancelHide();\n        if (autoHide > 0) {\n            this.hideTimeoutId = setTimeout(this.hide, autoHide * 1000);\n        }\n        if (! this.state.visible) {\n            this.setState({visible: true});\n            if (props.onShow) {\n                props.onShow(true, this);\n            }\n        }\n    }\n\n    /**\n     * Toggle component's visibility.\n     *\n     * @see #hide\n     * @see #show\n     */\n    toggleVisible() {\n        if (this.state.visible) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    }\n\n    /**\n     * Handle `blur` event on component.\n     *\n     * @param {SyntheticEvent} eventData\n     *      Data about event.\n     * @see #hide\n     */\n    handleBlur(eventData) {\n        const { hideOnBlur } = this.props;\n        if (hideOnBlur === true || hideOnBlur(eventData, this)) {\n            eventData.preventDefault();\n            eventData.stopPropagation();\n            this.hide();\n        }\n    }\n\n    /**\n     * Handle mouse click on component.\n     *\n     * @param {SyntheticEvent} eventData\n     *      Data about event.\n     * @see #toggleVisible\n     */\n    handleClick(eventData) {\n        const { props } = this;\n        if (! this.state.visible || props.hideOnAnyClick || props.hideForClick(eventData, this)) {\n            eventData.preventDefault();\n            eventData.stopPropagation();\n            this.toggleVisible();\n        }\n    }\n\n    /**\n     * Handle `focus` event on component.\n     *\n     * @param {SyntheticEvent} eventData\n     *      Data about event.\n     * @see #show\n     */\n    handleFocus(eventData) {\n        const { showOnFocus } = this.props;\n        if (showOnFocus === true || showOnFocus(eventData, this)) {\n            eventData.preventDefault();\n            eventData.stopPropagation();\n            this.show();\n        }\n    }\n\n    /**\n     * Handle mouse move over component.\n     *\n     * @param {SyntheticEvent} eventData\n     *      Data about event.\n     * @see #show\n     */\n    handleMouseMove(eventData) {\n        eventData.preventDefault();\n        eventData.stopPropagation();\n        this.show();\n    }\n\n    /**\n     * Component's lifecycle method that is invoked to create component view.\n     *\n     * @return {ReactElement}\n     *      Component view.\n     */\n    render() {\n        const { props } = this;\n        const { children, component: Component, componentRef, hideClassName, hideStyle,\n            showClassName, showOnMouseOver, showStyle, toggleVisibleOnClick } = props;\n        let { className } = props;\n        const { visible } = this.state;\n        const handleClick = (toggleVisibleOnClick && this.handleClick) || null;\n        const handleMove = showOnMouseOver\n            ? this.handleMouseMove\n            : null;\n        const classList = [];\n        if (className) {\n            classList.push(className);\n        }\n        className = visible\n            ? showClassName\n            : hideClassName;\n        if (className) {\n            classList.push(className);\n        }\n    \n        return (\n            <Component\n                {...props.componentProps}\n                ref={componentRef}\n                className={classList.join(' ')}\n                style={visible\n                    ? showStyle\n                    : hideStyle}\n                onClick={handleClick}\n                onTouchEnd={handleClick}\n                onMouseMove={handleMove}\n                onTouchMove={handleMove}\n                onMouseLeave={props.hideOnMouseLeave\n                    ? this.hide\n                    : null}\n                onFocus={props.showOnFocus\n                    ? this.handleFocus\n                    : null}\n                onBlur={props.hideOnBlur\n                    ? this.handleBlur\n                    : null}>\n                {children}\n            </Component>\n        );\n    }\n}\n\n/**\n * Id of timeout after which component will be hidden.\n *\n * @type {number}\n * @instance\n * @memberof TempShow\n */\nTempShow.prototype.hideTimeoutId = null;\n\n/**\n * Default function that is used to determine whether component should be hidden on a mouse click.\n *\n * Return `true` when component's root DOM element is clicked.\n *\n * @param {SyntheticEvent} eventData\n *      Data about event.\n * @return {boolean}\n *      `true` when component should be hidden.\n * @static\n * @memberof TempShow\n */\nTempShow.hideForClick = function hideForClick(eventData) {\n    return eventData.currentTarget === eventData.target;\n};\n\nTempShow.propTypes = {\n    /**\n     * Number of seconds after which component should be hidden automatically.\n     * When zero or negative value is specified auto hiding is not applied.\n     */\n    autoHide: PropTypes.number,\n    /**\n     * Component's children.\n     */\n    children: PropTypes.node,\n    /**\n     * A CSS class that should be set for component's root element.\n     */\n    className: PropTypes.string,\n    /**\n     * Component's root element type.\n     */\n    component: PropTypes.elementType,\n    /**\n     * Any properties (except for `className` and `style`) that should be passed to component.\n     */\n    componentProps: PropTypes.object,\n    /**\n     * An optional ref callback to get reference to the root (top-most) element of the rendered component.\n     * Just like other refs, this will provide `null` when it unmounts.\n     *\n     * This is helpful if you'd like access the DOM node for a parent Component without needing to use\n     * `ReactDOM.findDOMNode`.\n     */\n    componentRef: PropTypes.oneOfType([\n        PropTypes.func,\n        PropTypes.object,\n    ]),\n    /**\n     * An additional CSS class that should be set for component's root element when component is hidden.\n     */\n    hideClassName: PropTypes.string,\n    /**\n     * Function that will be used to determine whether component should be hidden on a mouse click\n     * when value of `hideOnAnyClick` prop is `false`.\n     * The following arguments will be passed into function: event data (`SyntheticEvent`)\n     * and component's object.\n     * If the function returns a true value, component will be hidden.\n     */\n    hideForClick: PropTypes.func,\n    /**\n     * Whether component should be hidden on any mouse click.\n     */\n    hideOnAnyClick: PropTypes.bool,\n    /**\n     * Whether component should be hidden on `blur` event.\n     * A function can be specified to determine whether component should be hidden.\n     * The following arguments will be passed into function: event data (`SyntheticEvent`)\n     * and component's object.\n     * If the function returns a true value, component will be hidden.\n     */\n    hideOnBlur: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.func\n    ]),\n    /**\n     * Whether component should be hidden when mouse leaves area of component's root DOM element.\n     */\n    hideOnMouseLeave: PropTypes.bool,\n    /**\n     * Styles that should be assigned for hidden component.\n     */\n    hideStyle: PropTypes.object,\n    /**\n     * Whether component's autohiding should be postponed when component props are changed.\n     */\n    postponeAutoHide: PropTypes.bool,\n    /**\n     * An additional CSS class that should be set for component's root element when component is visible.\n     */\n    showClassName: PropTypes.string,\n    /**\n     * Whether component should be shown on `focus` event.\n     * A function can be specified to determine whether component should be shown.\n     * The following arguments will be passed into function: event data (`SyntheticEvent`)\n     * and component's object.\n     * If the function returns a true value, component will be shown.\n     */\n    showOnFocus: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.func\n    ]),\n    /**\n     * Should component be shown on mouse over?\n     */\n    showOnMouseOver: PropTypes.bool,\n    /**\n     * Styles that should be assigned for visible component.\n     */\n    showStyle: PropTypes.object,\n    /**\n     * Whether component visibility should be toggled on a mouse click.\n     */\n    toggleVisibleOnClick: PropTypes.bool,\n    /**\n     * Should component be visible?\n     * Can be used to explicitly control component's visibility.\n     */\n    visible: PropTypes.bool,\n    /**\n     * Function that should be called on component hidding.\n     * The following arguments will be passed into function: `false` and component's object.\n     */\n    onHide: PropTypes.func,\n    /**\n     * Function that should be called on component show.\n     * The following arguments will be passed into function: `true` and component's object.\n     */\n    onShow: PropTypes.func,\n};\n\nTempShow.defaultProps = {\n    autoHide: 5,\n    component: 'div',\n    hideForClick: TempShow.hideForClick,\n    hideOnAnyClick: false,\n    hideOnBlur: false,\n    postponeAutoHide: true,\n    showOnFocus: true,\n    showOnMouseOver: true,\n    toggleVisibleOnClick: true,\n    visible: false\n};\n"],"names":["TempShow","props","state","visible","handleBlur","bind","handleClick","handleFocus","handleMouseMove","hide","componentDidUpdate","prevProps","prevState","show","postponeAutoHide","autoHide","componentWillUnmount","cancelHide","timeoutId","hideTimeoutId","clearTimeout","onHide","setState","autoHideTime","setTimeout","onShow","toggleVisible","eventData","hideOnBlur","preventDefault","stopPropagation","hideOnAnyClick","hideForClick","showOnFocus","render","children","Component","component","componentRef","hideClassName","hideStyle","showClassName","showOnMouseOver","showStyle","toggleVisibleOnClick","className","handleMove","classList","push","React","componentProps","join","hideOnMouseLeave","PureComponent","prototype","currentTarget","target","propTypes","PropTypes","number","node","string","elementType","object","oneOfType","func","bool","defaultProps"],"mappings":"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"}